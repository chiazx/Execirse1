<?xml version="1.0" encoding="UTF-8"?>
<root>
  <item name="android.view.ActionMode void setSubtitle(int) 0">
    <annotation name="androidx.annotation.StringRes"/>
  </item>
  <item name="android.view.ActionMode void setTitle(int) 0">
    <annotation name="androidx.annotation.StringRes"/>
  </item>
  <item name="android.view.ContextMenu android.view.ContextMenu setHeaderIcon(int) 0">
    <annotation name="androidx.annotation.DrawableRes"/>
  </item>
  <item name="android.view.ContextMenu android.view.ContextMenu setHeaderTitle(int) 0">
    <annotation name="androidx.annotation.StringRes"/>
  </item>
  <item name="android.view.ContextThemeWrapper ContextThemeWrapper(android.content.Context, int) 1">
    <annotation name="androidx.annotation.StyleRes"/>
  </item>
  <item name="android.view.Display int getOrientation()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.Surface.ROTATION_0, android.view.Surface.ROTATION_90, android.view.Surface.ROTATION_180, android.view.Surface.ROTATION_270}" />
    </annotation>
  </item>
  <item name="android.view.Display int getRotation()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.Surface.ROTATION_0, android.view.Surface.ROTATION_90, android.view.Surface.ROTATION_180, android.view.Surface.ROTATION_270}" />
    </annotation>
  </item>
  <item name="android.view.Display.HdrCapabilities int[] getSupportedHdrTypes()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.Display.HdrCapabilities.HDR_TYPE_DOLBY_VISION, android.view.Display.HdrCapabilities.HDR_TYPE_HDR10, android.view.Display.HdrCapabilities.HDR_TYPE_HLG}" />
    </annotation>
  </item>
  <item name="android.view.FocusFinder android.view.View findNextKeyboardNavigationCluster(android.view.View, android.view.View, int) 2">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.FOCUS_BACKWARD, android.view.View.FOCUS_FORWARD, android.view.View.FOCUS_LEFT, android.view.View.FOCUS_UP, android.view.View.FOCUS_RIGHT, android.view.View.FOCUS_DOWN}" />
    </annotation>
  </item>
  <item name="android.view.FrameMetrics long getMetric(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.FrameMetrics.UNKNOWN_DELAY_DURATION, android.view.FrameMetrics.INPUT_HANDLING_DURATION, android.view.FrameMetrics.ANIMATION_DURATION, android.view.FrameMetrics.LAYOUT_MEASURE_DURATION, android.view.FrameMetrics.DRAW_DURATION, android.view.FrameMetrics.SYNC_DURATION, android.view.FrameMetrics.COMMAND_ISSUE_DURATION, android.view.FrameMetrics.SWAP_BUFFERS_DURATION, android.view.FrameMetrics.TOTAL_DURATION, android.view.FrameMetrics.FIRST_DRAW_FRAME, android.view.FrameMetrics.INTENDED_VSYNC_TIMESTAMP, android.view.FrameMetrics.VSYNC_TIMESTAMP}" />
    </annotation>
  </item>
  <item name="android.view.LayoutInflater android.view.View inflate(int, android.view.ViewGroup) 0">
    <annotation name="androidx.annotation.LayoutRes"/>
  </item>
  <item name="android.view.LayoutInflater android.view.View inflate(int, android.view.ViewGroup, boolean) 0">
    <annotation name="androidx.annotation.LayoutRes"/>
  </item>
  <item name="android.view.Menu android.view.MenuItem add(int) 0">
    <annotation name="androidx.annotation.StringRes"/>
  </item>
  <item name="android.view.Menu android.view.MenuItem add(int, int, int, int) 3">
    <annotation name="androidx.annotation.StringRes"/>
  </item>
  <item name="android.view.Menu android.view.SubMenu addSubMenu(int) 0">
    <annotation name="androidx.annotation.StringRes"/>
  </item>
  <item name="android.view.Menu android.view.SubMenu addSubMenu(int, int, int, int) 3">
    <annotation name="androidx.annotation.StringRes"/>
  </item>
  <item name="android.view.MenuInflater void inflate(int, android.view.Menu) 0">
    <annotation name="androidx.annotation.MenuRes"/>
  </item>
  <item name="android.view.MenuItem android.view.MenuItem setActionView(int) 0">
    <annotation name="androidx.annotation.LayoutRes"/>
  </item>
  <item name="android.view.MenuItem android.view.MenuItem setIcon(int) 0">
    <annotation name="androidx.annotation.DrawableRes"/>
  </item>
  <item name="android.view.MenuItem android.view.MenuItem setTitle(int) 0">
    <annotation name="androidx.annotation.StringRes"/>
  </item>
  <item name="android.view.PixelCopy.OnPixelCopyFinishedListener void onPixelCopyFinished(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.PixelCopy.SUCCESS, android.view.PixelCopy.ERROR_UNKNOWN, android.view.PixelCopy.ERROR_TIMEOUT, android.view.PixelCopy.ERROR_SOURCE_NO_DATA, android.view.PixelCopy.ERROR_SOURCE_INVALID, android.view.PixelCopy.ERROR_DESTINATION_INVALID}" />
    </annotation>
  </item>
  <item name="android.view.PointerIcon android.view.PointerIcon load(android.content.res.Resources, int) 1">
    <annotation name="androidx.annotation.XmlRes"/>
  </item>
  <item name="android.view.SubMenu android.view.SubMenu setHeaderIcon(int) 0">
    <annotation name="androidx.annotation.DrawableRes"/>
  </item>
  <item name="android.view.SubMenu android.view.SubMenu setHeaderTitle(int) 0">
    <annotation name="androidx.annotation.StringRes"/>
  </item>
  <item name="android.view.SubMenu android.view.SubMenu setIcon(int) 0">
    <annotation name="androidx.annotation.DrawableRes"/>
  </item>
  <item name="android.view.View T findViewById(int) 0">
    <annotation name="androidx.annotation.IdRes"/>
  </item>
  <item name="android.view.View T requireViewById(int) 0">
    <annotation name="androidx.annotation.IdRes"/>
  </item>
  <item name="android.view.View android.os.Parcelable onSaveInstanceState()">
    <annotation name="androidx.annotation.CallSuper"/>
  </item>
  <item name="android.view.View android.view.View focusSearch(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.FOCUS_LEFT, android.view.View.FOCUS_UP, android.view.View.FOCUS_RIGHT, android.view.View.FOCUS_DOWN}" />
    </annotation>
  </item>
  <item name="android.view.View android.view.View inflate(android.content.Context, int, android.view.ViewGroup) 1">
    <annotation name="androidx.annotation.LayoutRes"/>
  </item>
  <item name="android.view.View android.view.View keyboardNavigationClusterSearch(android.view.View, int) 1">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.FOCUS_BACKWARD, android.view.View.FOCUS_FORWARD, android.view.View.FOCUS_LEFT, android.view.View.FOCUS_UP, android.view.View.FOCUS_RIGHT, android.view.View.FOCUS_DOWN}" />
    </annotation>
  </item>
  <item name="android.view.View boolean dispatchNestedPreScroll(int, int, int[], int[]) 2">
    <annotation name="androidx.annotation.Size">
      <val name="value" val="2" />
    </annotation>
  </item>
  <item name="android.view.View boolean dispatchNestedPreScroll(int, int, int[], int[]) 3">
    <annotation name="androidx.annotation.Size">
      <val name="value" val="2" />
    </annotation>
  </item>
  <item name="android.view.View boolean dispatchNestedScroll(int, int, int, int, int[]) 4">
    <annotation name="androidx.annotation.Size">
      <val name="value" val="2" />
    </annotation>
  </item>
  <item name="android.view.View boolean dispatchUnhandledMove(android.view.View, int) 1">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.FOCUS_LEFT, android.view.View.FOCUS_UP, android.view.View.FOCUS_RIGHT, android.view.View.FOCUS_DOWN}" />
    </annotation>
  </item>
  <item name="android.view.View boolean verifyDrawable(android.graphics.drawable.Drawable)">
    <annotation name="androidx.annotation.CallSuper"/>
  </item>
  <item name="android.view.View int getAutofillType()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.AUTOFILL_TYPE_NONE, android.view.View.AUTOFILL_TYPE_TEXT, android.view.View.AUTOFILL_TYPE_TOGGLE, android.view.View.AUTOFILL_TYPE_LIST, android.view.View.AUTOFILL_TYPE_DATE}" />
    </annotation>
  </item>
  <item name="android.view.View int getDrawingCacheBackgroundColor()">
    <annotation name="androidx.annotation.ColorInt"/>
  </item>
  <item name="android.view.View int getDrawingCacheQuality()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.DRAWING_CACHE_QUALITY_LOW, android.view.View.DRAWING_CACHE_QUALITY_HIGH, android.view.View.DRAWING_CACHE_QUALITY_AUTO}" />
    </annotation>
  </item>
  <item name="android.view.View int getFocusable()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.NOT_FOCUSABLE, android.view.View.FOCUSABLE, android.view.View.FOCUSABLE_AUTO}" />
    </annotation>
  </item>
  <item name="android.view.View int getId()">
    <annotation name="androidx.annotation.IdRes"/>
  </item>
  <item name="android.view.View int getImportantForAutofill()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.IMPORTANT_FOR_AUTOFILL_AUTO, android.view.View.IMPORTANT_FOR_AUTOFILL_YES, android.view.View.IMPORTANT_FOR_AUTOFILL_NO, android.view.View.IMPORTANT_FOR_AUTOFILL_YES_EXCLUDE_DESCENDANTS, android.view.View.IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS}" />
    </annotation>
  </item>
  <item name="android.view.View int getLayoutDirection()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.LAYOUT_DIRECTION_LTR, android.view.View.LAYOUT_DIRECTION_RTL}" />
    </annotation>
  </item>
  <item name="android.view.View int getOutlineAmbientShadowColor()">
    <annotation name="androidx.annotation.ColorInt"/>
  </item>
  <item name="android.view.View int getOutlineSpotShadowColor()">
    <annotation name="androidx.annotation.ColorInt"/>
  </item>
  <item name="android.view.View int getScrollBarStyle()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.SCROLLBARS_INSIDE_OVERLAY, android.view.View.SCROLLBARS_INSIDE_INSET, android.view.View.SCROLLBARS_OUTSIDE_OVERLAY, android.view.View.SCROLLBARS_OUTSIDE_INSET}" />
    </annotation>
  </item>
  <item name="android.view.View int getScrollIndicators()">
    <annotation name="androidx.annotation.IntDef">
      <val name="flag" val="true" />
      <val name="value" val="{android.view.View.SCROLL_INDICATOR_TOP, android.view.View.SCROLL_INDICATOR_BOTTOM, android.view.View.SCROLL_INDICATOR_LEFT, android.view.View.SCROLL_INDICATOR_RIGHT, android.view.View.SCROLL_INDICATOR_START, android.view.View.SCROLL_INDICATOR_END}" />
    </annotation>
  </item>
  <item name="android.view.View int getSolidColor()">
    <annotation name="androidx.annotation.ColorInt"/>
  </item>
  <item name="android.view.View int getTextAlignment()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.TEXT_ALIGNMENT_INHERIT, android.view.View.TEXT_ALIGNMENT_GRAVITY, android.view.View.TEXT_ALIGNMENT_CENTER, android.view.View.TEXT_ALIGNMENT_TEXT_START, android.view.View.TEXT_ALIGNMENT_TEXT_END, android.view.View.TEXT_ALIGNMENT_VIEW_START, android.view.View.TEXT_ALIGNMENT_VIEW_END}" />
    </annotation>
  </item>
  <item name="android.view.View int getVisibility()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.VISIBLE, android.view.View.INVISIBLE, android.view.View.GONE}" />
    </annotation>
  </item>
  <item name="android.view.View int getWindowVisibility()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.VISIBLE, android.view.View.INVISIBLE, android.view.View.GONE}" />
    </annotation>
  </item>
  <item name="android.view.View java.util.ArrayList&lt;android.view.View&gt; getFocusables(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.FOCUS_BACKWARD, android.view.View.FOCUS_FORWARD, android.view.View.FOCUS_LEFT, android.view.View.FOCUS_UP, android.view.View.FOCUS_RIGHT, android.view.View.FOCUS_DOWN}" />
    </annotation>
  </item>
  <item name="android.view.View void addFocusables(java.util.ArrayList<android.view.View>, int) 1">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.FOCUS_BACKWARD, android.view.View.FOCUS_FORWARD, android.view.View.FOCUS_LEFT, android.view.View.FOCUS_UP, android.view.View.FOCUS_RIGHT, android.view.View.FOCUS_DOWN}" />
    </annotation>
  </item>
  <item name="android.view.View void addFocusables(java.util.ArrayList<android.view.View>, int, int) 1">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.FOCUS_BACKWARD, android.view.View.FOCUS_FORWARD, android.view.View.FOCUS_LEFT, android.view.View.FOCUS_UP, android.view.View.FOCUS_RIGHT, android.view.View.FOCUS_DOWN}" />
    </annotation>
  </item>
  <item name="android.view.View void addFocusables(java.util.ArrayList<android.view.View>, int, int) 2">
    <annotation name="androidx.annotation.IntDef">
      <val name="flag" val="true" />
      <val name="value" val="{android.view.View.FOCUSABLES_ALL, android.view.View.FOCUSABLES_TOUCH_MODE}" />
    </annotation>
  </item>
  <item name="android.view.View void dispatchDisplayHint(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.VISIBLE, android.view.View.INVISIBLE, android.view.View.GONE}" />
    </annotation>
  </item>
  <item name="android.view.View void dispatchFinishTemporaryDetach()">
    <annotation name="androidx.annotation.CallSuper"/>
  </item>
  <item name="android.view.View void dispatchProvideAutofillStructure(android.view.ViewStructure, int) 1">
    <annotation name="androidx.annotation.IntDef">
      <val name="flag" val="true" />
      <val name="value" val="{android.view.View.AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS}" />
    </annotation>
  </item>
  <item name="android.view.View void dispatchStartTemporaryDetach()">
    <annotation name="androidx.annotation.CallSuper"/>
  </item>
  <item name="android.view.View void dispatchVisibilityChanged(android.view.View, int) 1">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.VISIBLE, android.view.View.INVISIBLE, android.view.View.GONE}" />
    </annotation>
  </item>
  <item name="android.view.View void dispatchWindowVisibilityChanged(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.VISIBLE, android.view.View.INVISIBLE, android.view.View.GONE}" />
    </annotation>
  </item>
  <item name="android.view.View void draw(android.graphics.Canvas)">
    <annotation name="androidx.annotation.CallSuper"/>
  </item>
  <item name="android.view.View void drawableHotspotChanged(float, float)">
    <annotation name="androidx.annotation.CallSuper"/>
  </item>
  <item name="android.view.View void drawableStateChanged()">
    <annotation name="androidx.annotation.CallSuper"/>
  </item>
  <item name="android.view.View void findViewsWithText(java.util.ArrayList<android.view.View>, java.lang.CharSequence, int) 2">
    <annotation name="androidx.annotation.IntDef">
      <val name="flag" val="true" />
      <val name="value" val="{android.view.View.FIND_VIEWS_WITH_TEXT, android.view.View.FIND_VIEWS_WITH_CONTENT_DESCRIPTION}" />
    </annotation>
  </item>
  <item name="android.view.View void getLocationInWindow(int[]) 0">
    <annotation name="androidx.annotation.Size">
      <val name="value" val="2" />
    </annotation>
  </item>
  <item name="android.view.View void getLocationOnScreen(int[]) 0">
    <annotation name="androidx.annotation.Size">
      <val name="value" val="2" />
    </annotation>
  </item>
  <item name="android.view.View void jumpDrawablesToCurrentState()">
    <annotation name="androidx.annotation.CallSuper"/>
  </item>
  <item name="android.view.View void onAnimationEnd()">
    <annotation name="androidx.annotation.CallSuper"/>
  </item>
  <item name="android.view.View void onAnimationStart()">
    <annotation name="androidx.annotation.CallSuper"/>
  </item>
  <item name="android.view.View void onAttachedToWindow()">
    <annotation name="androidx.annotation.CallSuper"/>
  </item>
  <item name="android.view.View void onDetachedFromWindow()">
    <annotation name="androidx.annotation.CallSuper"/>
  </item>
  <item name="android.view.View void onDisplayHint(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.VISIBLE, android.view.View.INVISIBLE, android.view.View.GONE}" />
    </annotation>
  </item>
  <item name="android.view.View void onFinishInflate()">
    <annotation name="androidx.annotation.CallSuper"/>
  </item>
  <item name="android.view.View void onFocusChanged(boolean, int, android.graphics.Rect)">
    <annotation name="androidx.annotation.CallSuper"/>
  </item>
  <item name="android.view.View void onFocusChanged(boolean, int, android.graphics.Rect) 1">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.FOCUS_BACKWARD, android.view.View.FOCUS_FORWARD, android.view.View.FOCUS_LEFT, android.view.View.FOCUS_UP, android.view.View.FOCUS_RIGHT, android.view.View.FOCUS_DOWN}" />
    </annotation>
  </item>
  <item name="android.view.View void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)">
    <annotation name="androidx.annotation.CallSuper"/>
  </item>
  <item name="android.view.View void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)">
    <annotation name="androidx.annotation.CallSuper"/>
  </item>
  <item name="android.view.View void onPointerCaptureChange(boolean)">
    <annotation name="androidx.annotation.CallSuper"/>
  </item>
  <item name="android.view.View void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)">
    <annotation name="androidx.annotation.CallSuper"/>
  </item>
  <item name="android.view.View void onProvideAutofillStructure(android.view.ViewStructure, int) 1">
    <annotation name="androidx.annotation.IntDef">
      <val name="flag" val="true" />
      <val name="value" val="{android.view.View.AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS}" />
    </annotation>
  </item>
  <item name="android.view.View void onRestoreInstanceState(android.os.Parcelable)">
    <annotation name="androidx.annotation.CallSuper"/>
  </item>
  <item name="android.view.View void onRtlPropertiesChanged(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.LAYOUT_DIRECTION_LTR, android.view.View.LAYOUT_DIRECTION_RTL}" />
    </annotation>
  </item>
  <item name="android.view.View void onVisibilityAggregated(boolean)">
    <annotation name="androidx.annotation.CallSuper"/>
  </item>
  <item name="android.view.View void onVisibilityChanged(android.view.View, int) 1">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.VISIBLE, android.view.View.INVISIBLE, android.view.View.GONE}" />
    </annotation>
  </item>
  <item name="android.view.View void onWindowVisibilityChanged(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.VISIBLE, android.view.View.INVISIBLE, android.view.View.GONE}" />
    </annotation>
  </item>
  <item name="android.view.View void requestLayout()">
    <annotation name="androidx.annotation.CallSuper"/>
  </item>
  <item name="android.view.View void setAlpha(float) 0">
    <annotation name="androidx.annotation.FloatRange">
      <val name="from" val="0.0" />
      <val name="to" val="1.0" />
    </annotation>
  </item>
  <item name="android.view.View void setBackgroundColor(int) 0">
    <annotation name="androidx.annotation.ColorInt"/>
  </item>
  <item name="android.view.View void setBackgroundResource(int) 0">
    <annotation name="androidx.annotation.DrawableRes"/>
  </item>
  <item name="android.view.View void setDrawingCacheBackgroundColor(int) 0">
    <annotation name="androidx.annotation.ColorInt"/>
  </item>
  <item name="android.view.View void setDrawingCacheQuality(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.DRAWING_CACHE_QUALITY_LOW, android.view.View.DRAWING_CACHE_QUALITY_HIGH, android.view.View.DRAWING_CACHE_QUALITY_AUTO}" />
    </annotation>
  </item>
  <item name="android.view.View void setFocusable(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.NOT_FOCUSABLE, android.view.View.FOCUSABLE, android.view.View.FOCUSABLE_AUTO}" />
    </annotation>
  </item>
  <item name="android.view.View void setId(int) 0">
    <annotation name="androidx.annotation.IdRes"/>
  </item>
  <item name="android.view.View void setImportantForAutofill(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.IMPORTANT_FOR_AUTOFILL_AUTO, android.view.View.IMPORTANT_FOR_AUTOFILL_YES, android.view.View.IMPORTANT_FOR_AUTOFILL_NO, android.view.View.IMPORTANT_FOR_AUTOFILL_YES_EXCLUDE_DESCENDANTS, android.view.View.IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS}" />
    </annotation>
  </item>
  <item name="android.view.View void setLabelFor(int) 0">
    <annotation name="androidx.annotation.IdRes"/>
  </item>
  <item name="android.view.View void setLayoutDirection(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.LAYOUT_DIRECTION_LTR, android.view.View.LAYOUT_DIRECTION_RTL, android.view.View.LAYOUT_DIRECTION_INHERIT, android.view.View.LAYOUT_DIRECTION_LOCALE}" />
    </annotation>
  </item>
  <item name="android.view.View void setOutlineAmbientShadowColor(int) 0">
    <annotation name="androidx.annotation.ColorInt"/>
  </item>
  <item name="android.view.View void setOutlineSpotShadowColor(int) 0">
    <annotation name="androidx.annotation.ColorInt"/>
  </item>
  <item name="android.view.View void setScrollBarStyle(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.SCROLLBARS_INSIDE_OVERLAY, android.view.View.SCROLLBARS_INSIDE_INSET, android.view.View.SCROLLBARS_OUTSIDE_OVERLAY, android.view.View.SCROLLBARS_OUTSIDE_INSET}" />
    </annotation>
  </item>
  <item name="android.view.View void setScrollIndicators(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="flag" val="true" />
      <val name="value" val="{android.view.View.SCROLL_INDICATOR_TOP, android.view.View.SCROLL_INDICATOR_BOTTOM, android.view.View.SCROLL_INDICATOR_LEFT, android.view.View.SCROLL_INDICATOR_RIGHT, android.view.View.SCROLL_INDICATOR_START, android.view.View.SCROLL_INDICATOR_END}" />
    </annotation>
  </item>
  <item name="android.view.View void setScrollIndicators(int, int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="flag" val="true" />
      <val name="value" val="{android.view.View.SCROLL_INDICATOR_TOP, android.view.View.SCROLL_INDICATOR_BOTTOM, android.view.View.SCROLL_INDICATOR_LEFT, android.view.View.SCROLL_INDICATOR_RIGHT, android.view.View.SCROLL_INDICATOR_START, android.view.View.SCROLL_INDICATOR_END}" />
    </annotation>
  </item>
  <item name="android.view.View void setScrollIndicators(int, int) 1">
    <annotation name="androidx.annotation.IntDef">
      <val name="flag" val="true" />
      <val name="value" val="{android.view.View.SCROLL_INDICATOR_TOP, android.view.View.SCROLL_INDICATOR_BOTTOM, android.view.View.SCROLL_INDICATOR_LEFT, android.view.View.SCROLL_INDICATOR_RIGHT, android.view.View.SCROLL_INDICATOR_START, android.view.View.SCROLL_INDICATOR_END}" />
    </annotation>
  </item>
  <item name="android.view.View void setTextAlignment(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.TEXT_ALIGNMENT_INHERIT, android.view.View.TEXT_ALIGNMENT_GRAVITY, android.view.View.TEXT_ALIGNMENT_CENTER, android.view.View.TEXT_ALIGNMENT_TEXT_START, android.view.View.TEXT_ALIGNMENT_TEXT_END, android.view.View.TEXT_ALIGNMENT_VIEW_START, android.view.View.TEXT_ALIGNMENT_VIEW_END}" />
    </annotation>
  </item>
  <item name="android.view.View void setVisibility(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.VISIBLE, android.view.View.INVISIBLE, android.view.View.GONE}" />
    </annotation>
  </item>
  <item name="android.view.View.MeasureSpec int getMode(int)">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.MeasureSpec.UNSPECIFIED, android.view.View.MeasureSpec.EXACTLY, android.view.View.MeasureSpec.AT_MOST}" />
    </annotation>
  </item>
  <item name="android.view.View.MeasureSpec int makeMeasureSpec(int, int) 0">
    <annotation name="androidx.annotation.IntRange">
      <val name="from" val="0" />
      <val name="to" val="1073741823" />
    </annotation>
  </item>
  <item name="android.view.View.MeasureSpec int makeMeasureSpec(int, int) 1">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.MeasureSpec.UNSPECIFIED, android.view.View.MeasureSpec.EXACTLY, android.view.View.MeasureSpec.AT_MOST}" />
    </annotation>
  </item>
  <item name="android.view.ViewGroup void dispatchProvideAutofillStructure(android.view.ViewStructure, int) 1">
    <annotation name="androidx.annotation.IntDef">
      <val name="flag" val="true" />
      <val name="value" val="{android.view.View.AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS}" />
    </annotation>
  </item>
  <item name="android.view.ViewGroup void onDescendantInvalidated(android.view.View, android.view.View)">
    <annotation name="androidx.annotation.CallSuper"/>
  </item>
  <item name="android.view.ViewStructure void setAutofillType(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.AUTOFILL_TYPE_NONE, android.view.View.AUTOFILL_TYPE_TEXT, android.view.View.AUTOFILL_TYPE_TOGGLE, android.view.View.AUTOFILL_TYPE_LIST, android.view.View.AUTOFILL_TYPE_DATE}" />
    </annotation>
  </item>
  <item name="android.view.ViewStructure void setImportantForAutofill(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.view.View.IMPORTANT_FOR_AUTOFILL_AUTO, android.view.View.IMPORTANT_FOR_AUTOFILL_YES, android.view.View.IMPORTANT_FOR_AUTOFILL_NO, android.view.View.IMPORTANT_FOR_AUTOFILL_YES_EXCLUDE_DESCENDANTS, android.view.View.IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS}" />
    </annotation>
  </item>
  <item name="android.view.ViewStub ViewStub(android.content.Context, int) 1">
    <annotation name="androidx.annotation.LayoutRes"/>
  </item>
  <item name="android.view.ViewStub int getInflatedId()">
    <annotation name="androidx.annotation.IdRes"/>
  </item>
  <item name="android.view.ViewStub int getLayoutResource()">
    <annotation name="androidx.annotation.LayoutRes"/>
  </item>
  <item name="android.view.ViewStub void setInflatedId(int) 0">
    <annotation name="androidx.annotation.IdRes"/>
  </item>
  <item name="android.view.ViewStub void setLayoutResource(int) 0">
    <annotation name="androidx.annotation.LayoutRes"/>
  </item>
  <item name="android.view.Window T findViewById(int) 0">
    <annotation name="androidx.annotation.IdRes"/>
  </item>
  <item name="android.view.Window T requireViewById(int) 0">
    <annotation name="androidx.annotation.IdRes"/>
  </item>
  <item name="android.view.Window int getColorMode()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.content.pm.ActivityInfo.COLOR_MODE_DEFAULT, android.content.pm.ActivityInfo.COLOR_MODE_WIDE_COLOR_GAMUT, android.content.pm.ActivityInfo.COLOR_MODE_HDR}" />
    </annotation>
  </item>
  <item name="android.view.Window int getNavigationBarColor()">
    <annotation name="androidx.annotation.ColorInt"/>
  </item>
  <item name="android.view.Window int getNavigationBarDividerColor()">
    <annotation name="androidx.annotation.ColorInt"/>
  </item>
  <item name="android.view.Window int getStatusBarColor()">
    <annotation name="androidx.annotation.ColorInt"/>
  </item>
  <item name="android.view.Window void setBackgroundDrawableResource(int) 0">
    <annotation name="androidx.annotation.DrawableRes"/>
  </item>
  <item name="android.view.Window void setColorMode(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.content.pm.ActivityInfo.COLOR_MODE_DEFAULT, android.content.pm.ActivityInfo.COLOR_MODE_WIDE_COLOR_GAMUT, android.content.pm.ActivityInfo.COLOR_MODE_HDR}" />
    </annotation>
  </item>
  <item name="android.view.Window void setContentView(int) 0">
    <annotation name="androidx.annotation.LayoutRes"/>
  </item>
  <item name="android.view.Window void setFeatureDrawableResource(int, int) 1">
    <annotation name="androidx.annotation.DrawableRes"/>
  </item>
  <item name="android.view.Window void setIcon(int) 0">
    <annotation name="androidx.annotation.DrawableRes"/>
  </item>
  <item name="android.view.Window void setLogo(int) 0">
    <annotation name="androidx.annotation.DrawableRes"/>
  </item>
  <item name="android.view.Window void setNavigationBarColor(int) 0">
    <annotation name="androidx.annotation.ColorInt"/>
  </item>
  <item name="android.view.Window void setNavigationBarDividerColor(int) 0">
    <annotation name="androidx.annotation.ColorInt"/>
  </item>
  <item name="android.view.Window void setStatusBarColor(int) 0">
    <annotation name="androidx.annotation.ColorInt"/>
  </item>
  <item name="android.view.Window void setTitleColor(int) 0">
    <annotation name="androidx.annotation.ColorInt"/>
  </item>
  <item name="android.view.Window void setWindowAnimations(int) 0">
    <annotation name="androidx.annotation.StyleRes"/>
  </item>
  <item name="android.view.WindowManager.LayoutParams int getColorMode()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.content.pm.ActivityInfo.COLOR_MODE_DEFAULT, android.content.pm.ActivityInfo.COLOR_MODE_WIDE_COLOR_GAMUT, android.content.pm.ActivityInfo.COLOR_MODE_HDR}" />
    </annotation>
  </item>
  <item name="android.view.WindowManager.LayoutParams layoutInDisplayCutoutMode">
    <annotation name="androidx.annotation.IntDef">
      <val name="flag" val="true" />
      <val name="value" val="{android.view.WindowManager.LayoutParams.LAYOUT_IN_DISPLAY_CUTOUT_MODE_DEFAULT, android.view.WindowManager.LayoutParams.LAYOUT_IN_DISPLAY_CUTOUT_MODE_SHORT_EDGES, android.view.WindowManager.LayoutParams.LAYOUT_IN_DISPLAY_CUTOUT_MODE_NEVER}" />
    </annotation>
  </item>
  <item name="android.view.WindowManager.LayoutParams softInputMode">
    <annotation name="androidx.annotation.IntDef">
      <val name="flag" val="true" />
      <val name="value" val="{android.view.WindowManager.LayoutParams.SOFT_INPUT_STATE_UNSPECIFIED, android.view.WindowManager.LayoutParams.SOFT_INPUT_STATE_UNCHANGED, android.view.WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN, android.view.WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN, android.view.WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE, android.view.WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE, android.view.WindowManager.LayoutParams.SOFT_INPUT_ADJUST_UNSPECIFIED, android.view.WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE, android.view.WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN, android.view.WindowManager.LayoutParams.SOFT_INPUT_ADJUST_NOTHING, android.view.WindowManager.LayoutParams.SOFT_INPUT_IS_FORWARD_NAVIGATION}" />
    </annotation>
  </item>
  <item name="android.view.WindowManager.LayoutParams void setColorMode(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.content.pm.ActivityInfo.COLOR_MODE_DEFAULT, android.content.pm.ActivityInfo.COLOR_MODE_WIDE_COLOR_GAMUT, android.content.pm.ActivityInfo.COLOR_MODE_HDR}" />
    </annotation>
  </item>
</root>

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     